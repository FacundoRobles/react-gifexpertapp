{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OAEA,sBAAMC,SAVe,SAAEC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAKlB,SAEM,uBACMO,KAAM,OACNC,MAAST,EACTU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,QAmBhBG,YAAa,uB,+BCtBhBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCFPO,EAAc,SAAC,GAAsB,IAApBH,EAAmB,EAAnBA,MAAQV,EAAW,EAAXA,IAGlC,OACI,sBAAKc,UAAU,4DAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,kCAAKA,EAAL,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECFwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAY,WACRxB,EAASC,GACJwB,MAAO,SAAAC,GAEJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDnB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,qBAAIJ,UAAW,oCAAf,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAW,mCAAd,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADGA,EAAIC,aEUzBgB,EA5BM,WAEjB,MAAoC1C,mBAAS,CAAC,UAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEE,6BAEI4C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CACIA,SAAaA,GACLA,Y,MCX5B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7f0ee0ad.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2){\r\n        setCategories( cat => [ inputValue, ...cat]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        \r\n    <form onSubmit={ handleSubmit }>\r\n\r\n          <input\r\n                type= 'text'\r\n                value = {inputValue}\r\n                onChange= { handleInputChange }\r\n                placeholder= 'Enter your Gif!'\r\n          />\r\n\r\n    </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=12&api_key=qPpjpWgdjybELLupNYMuvfW2Bvj4OJCu`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map ( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title , url } ) => {\r\n    \r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn animate__delay-3s>'>\r\n            <img src= {url} alt= {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\"> {category} </h3>\r\n\r\n            { loading && <p className= 'animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n            \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem \r\n                            key = { img.id }\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n    useEffect ( () => {\r\n        getGifs( category )\r\n            .then ( imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            })\r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n    \r\n}","import React, {useState} from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Gifs!'])\r\n\r\n    return (\r\n        <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories= { setCategories }/>\r\n          <hr/>\r\n\r\n            <ol>\r\n            {\r\n                categories.map( category => (\r\n                <GifGrid \r\n                    category = { category }\r\n                    key = { category }\r\n                    />\r\n                )\r\n            )\r\n            }\r\n         </ol>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}